[tool.poetry]
name = "UralEnergo bot"
version = "0.1.0"
description = "A short description of the project"
authors = ["Your name <Your address email (you@example.com)>"]
readme = "README.md"
packages = [{include = "uralelectro-bot"}]

[tool.poetry.dependencies]
python = "^3.12"
alembic = "^1.13.3"
pydantic = "^2.10"
sqlalchemy-utils = "^0.41.2"
fastapi = "^0.115.5"
uvicorn = "^0.32.0"
dacite = "^1.9.2"
psycopg = {extras = ["binary"], version = "^3.2.3"}
pydantic-settings = "^2.7"
sqlalchemy = "2.0.20"
redis = "^5.2.1"
loguru = "^0.7.3"
cachetools = "^5.5.2"
aiogram = "3.19"
orjson = "^3.10.16"
asgi-correlation-id = "^4.3.4"
sqladmin = "^0.20.1"
itsdangerous = "^2.2.0"

[tool.poetry.group.dev.dependencies]
pre-commit = "^3.8.0"
bandit = "^1.7.9"
mypy = "^1.11.2"
black = "^24.8.0"
flake8-bandit = "^4.1.1"
flake8-print = "^5.0.0"
flake8-broken-line = "^1.0.0"
flake8-bugbear = "^24.8.19"
flake8-pytest-style = "^2.0.0"
flake8-pyproject = "^1.2.3"
flake8 = "^7.1.1"

[tool.black]
line-length = 120
skip-string-normalization = true

[tool.flake8]
count = true
max-line-length = 120
max-complexity = 10
exclude = [".git", "__pycache__", ".mypy_cache", ".venv", "src/migrations/*.py"]
per-file-ignores = [
    "src/*/__init__.py, bot/*/__init__.py: F401", # module imported but unused
]
ignore = [
    "S104", # Possible binding to all interfaces.
    "F403", # 'from module import *' used; unable to detect undefined names
    "W503", # line break occurred before a binary operator
    "C901", # function is too complex
]

[tool.mypy]
ignore_missing_imports = true

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
